### 가게 생성
POST http://localhost:8080/api/stores
Content-Type: application/json
Cookie: JSESSIONID={{JSESSIONID}}

{
  "name": "햄버거 가게",
  "openTime": "09:00:00",
  "closeTime": "22:00:00",
  "minOrderPrice": 10000
}
### [사장 회원가입] 정상 요청
POST http://localhost:8080/api/auth/signup
Content-Type: application/json

{
  "email": "test2@example.com",
  "password": "Abcd1234!",
  "username": "슬몽몽2" ,
  "role": "OWNER"
}

### [로그인] 정상 요청 + 쿠키 저장
POST http://localhost:8080/api/auth/login
Content-Type: application/json

{
  "email": "test2@example.com",
  "password": "Abcd1234!"
}

> {%
  response.headers.get = function (setCookie) {

  };
  // 쿠키 자동 저장
  client.global.set("JSESSIONID", response.headers.valueOf("Set-Cookie").split(";")[0].split("=")[1]);
  client.log("JSESSIONID : " + client.global.get("JSESSIONID"));
%}
### 가게 생성
POST http://localhost:8080/api/stores
Content-Type: application/json
Cookie: JSESSIONID={{JSESSIONID}}

{
  "name": "햄버거 가게",
  "openTime": "09:00:00",
  "closeTime": "22:00:00",
  "minOrderPrice": 10000
}
### 가게 생성 2
POST http://localhost:8080/api/stores
Content-Type: application/json
Cookie: JSESSIONID={{JSESSIONID}}

{
  "name": "피자 가게",
  "openTime": "10:00:00",
  "closeTime": "22:00:00",
  "minOrderPrice": 18000
}
### 내 가게 수정
PUT http://localhost:8080/api/stores/my/1
Content-Type: application/json
Cookie: JSESSIONID={{JSESSIONID}}

{
  "name": "햄버거 가게",
  "openTime": "10:00:00",
  "closeTime": "23:00:00",
  "minOrderPrice": 12000
}
### 가게 상태 변경
PATCH http://localhost:8080/api/stores/my/2/status?status=CLOSED
Cookie: JSESSIONID={{JSESSIONID}}

### 페이지 기반 전체 가게 조회
GET http://localhost:8080/api/stores/pages?keyword=가게&page=0&size=10
Cookie: JSESSIONID={{JSESSIONID}}


### 내 가게 전체 보기
GET http://localhost:8080/api/stores/my
Cookie: JSESSIONID={{JSESSIONID}}
### 메뉴 생성
POST http://localhost:8080/api/menus
Content-Type: application/json
Cookie: JSESSIONID={{JSESSIONID}}

{
  "id": 1,
  "name": "불고기 버거",
  "price": 6500,
  "description": "매콤한 불고기 맛의 버거입니다"
}

###
### 메뉴 생성
POST http://localhost:8080/api/menus
Content-Type: application/json
Cookie: JSESSIONID={{JSESSIONID}}

{
  "id": 1,
  "name": "치즈 버거",
  "price": 4000,
  "description": "그냥 치즈 맛의 버거입니다"
}

###
### 메뉴 생성
POST http://localhost:8080/api/menus
Content-Type: application/json
Cookie: JSESSIONID={{JSESSIONID}}

{
  "id": 1,
  "name": "새우 버거",
  "price": 5000,
  "description": "새우 맛의 버거입니다"
}

###

### 메뉴 수정
PUT http://localhost:8080/api/menus/2
Content-Type: application/json
Cookie: JSESSIONID={{JSESSIONID}}

{
  "id": 2,
  "name": "더블 치즈 버거",
  "price": 7000,
  "description": "치즈버거 진화"
}

###

### 메뉴 삭제
DELETE http://localhost:8080/api/menus/3
Cookie: JSESSIONID={{JSESSIONID}}
### 가게 단건 조회
GET http://localhost:8080/api/stores/1
Cookie: JSESSIONID={{JSESSIONID}}
### 로그아웃 (세션 필요)
PUT http://localhost:8080/api/auth/logout
Cookie: JSESSIONID={{JSESSIONID}}

### [유저 회원가입] 정상 요청
POST http://localhost:8080/api/auth/signup
Content-Type: application/json

{
  "email": "test1@example.com",
  "password": "Abcd1234!",
  "username": "나" ,
  "role": "USER"
}
### [로그인] 정상 요청 + 쿠키 저장
POST http://localhost:8080/api/auth/login
Content-Type: application/json

{
  "email": "test1@example.com",
  "password": "Abcd1234!"
}

> {%
  response.headers.get = function (setCookie) {

  };
  // 쿠키 자동 저장
  client.global.set("JSESSIONID", response.headers.valueOf("Set-Cookie").split(";")[0].split("=")[1]);
  client.log("JSESSIONID : " + client.global.get("JSESSIONID"));
%}
### 가게 생성
POST http://localhost:8080/api/stores
Content-Type: application/json
Cookie: JSESSIONID={{JSESSIONID}}

{
  "name": "햄버거 가게",
  "openTime": "09:00:00",
  "closeTime": "22:00:00",
  "minOrderPrice": 10000
}
### [USER] 주문하기
POST http://localhost:8080/api/orders
Content-Type: application/json
Cookie: JSESSIONID={{JSESSIONID}}

{
  "storeId": 1,
  "menus": [
    {
      "menuId": 1,
      "quantity": 2
    },
    {
      "menuId": 2,
      "quantity": 1
    }
  ],
  "requestMessage": "양파 빼주세요"
}

###
### [USER] 주문하기
POST http://localhost:8080/api/orders
Content-Type: application/json
Cookie: JSESSIONID={{JSESSIONID}}

{
  "storeId": 1,
  "menus": [
    {
      "menuId": 1,
      "quantity": 3
    }
  ],
  "requestMessage": "삭제 해주세요"
}

###
### 로그아웃 (세션 필요)
PUT http://localhost:8080/api/auth/logout
Cookie: JSESSIONID={{JSESSIONID}}
### [로그인] 정상 요청 + 쿠키 저장
POST http://localhost:8080/api/auth/login
Content-Type: application/json

{
  "email": "test2@example.com",
  "password": "Abcd1234!"
}

> {%
  response.headers.get = function (setCookie) {

  };
  // 쿠키 자동 저장
  client.global.set("JSESSIONID", response.headers.valueOf("Set-Cookie").split(";")[0].split("=")[1]);
  client.log("JSESSIONID : " + client.global.get("JSESSIONID"));
%}
### [OWNER] 매장 주문 목록 조회 (페이징)
GET http://localhost:8080/api/owner/store/1/orders?page=0&size=5
Cookie: JSESSIONID={{JSESSIONID}}

###

### [OWNER] 주문 상세 조회
GET http://localhost:8080/api/owner/store/1/orders/1
Cookie: JSESSIONID={{JSESSIONID}}

###
### 거절
PATCH http://localhost:8080/api/owner/store/1/orders/2/status/REJECT
Cookie: JSESSIONID={{JSESSIONID}}

###

### [OWNER] 주문 수락
PATCH http://localhost:8080/api/owner/store/1/orders/1/status/ACCEPT
Cookie: JSESSIONID={{JSESSIONID}}

###

### [OWNER] 주문 음식 준비중
PATCH http://localhost:8080/api/owner/store/1/orders/1/status/PREPARE
Cookie: JSESSIONID={{JSESSIONID}}

###
### [OWNER] 배달 중으로 상태 변경
PATCH http://localhost:8080/api/owner/store/1/orders/1/status/DELIVER
Cookie: JSESSIONID={{JSESSIONID}}

###
### [OWNER] 주문 완료 처리
PATCH http://localhost:8080/api/owner/store/1/orders/1/status/COMPLETE
Cookie: JSESSIONID={{JSESSIONID}}

###
### 로그아웃 (세션 필요)
PUT http://localhost:8080/api/auth/logout
Cookie: JSESSIONID={{JSESSIONID}}
### [로그인] 정상 요청 + 쿠키 저장
POST http://localhost:8080/api/auth/login
Content-Type: application/json

{
  "email": "test1@example.com",
  "password": "Abcd1234!"
}

> {%
  response.headers.get = function (setCookie) {

  };
  // 쿠키 자동 저장
  client.global.set("JSESSIONID", response.headers.valueOf("Set-Cookie").split(";")[0].split("=")[1]);
  client.log("JSESSIONID : " + client.global.get("JSESSIONID"));
%}
### 리뷰 저장 요청 (자동으로 쿠키 붙음)
POST http://localhost:8080/api/reviews
Content-Type: multipart/form-data; boundary=boundary
Cookie: JSESSIONID={{JSESSIONID}}

--boundary
Content-Disposition: form-data; name="requestDto"
Content-Type: application/json


{
  "storeId": 1,
  "orderId": 1,
  "content": "리뷰 내용",
  "rating": 5
}

--boundary
Content-Disposition: form-data; name="files"; filename="join.png"
Content-Type: image/png

< C:/Users/dnjs7/OneDrive/사진/스크린샷/join.png
--boundary
Content-Disposition: form-data; name="files"; filename="ee.png"
Content-Type: image/png

< C:/Users/dnjs7/OneDrive/사진/스크린샷/ee.png
--boundary--
### 가게 별 리뷰 조회
GET http://localhost:8080/api/reviews?storeId=1
Cookie: JSESSIONID={{JSESSIONID}}

###

### 별점 기준 리뷰 조회
GET http://localhost:8080/api/reviews?rating=5
Cookie: JSESSIONID={{JSESSIONID}}

###



###



###

PATCH http://localhost:8080/api/reviews/1
Content-Type: multipart/form-data; boundary=MyBoundary
Cookie: JSESSIONID={{JSESSIONID}}

--MyBoundary
Content-Disposition: form-data; name="request"
Content-Type: application/json

{"content":"수정된 리뷰입니다!","rating":4}
--MyBoundary
Content-Disposition: form-data; name="files"; filename="ww.png"
Content-Type: image/png

< C:/Users/dnjs7/OneDrive/사진/스크린샷/ww.png
--MyBoundary--
### 리뷰 삭제
DELETE http://localhost:8080/api/reviews/1
Cookie: JSESSIONID=YOUR_SESSION_ID

### 회원 탈퇴 (세션 필요)
PATCH http://localhost:8080/api/auth/withdraw
Content-Type: application/json
Cookie: JSESSIONID={{JSESSIONID}}

{
  "email": "test2@example.com",
  "password": "Abcd1234!"
}
### [유저 회원가입] 정상 요청
POST http://localhost:8080/api/auth/signup
Content-Type: application/json

{
  "email": "test1@example.com",
  "password": "Abcd1234!",
  "username": "나" ,
  "role": "USER"
}